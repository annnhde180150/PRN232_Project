// <auto-generated />
using System;
using BussinessObjects.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BussinessObjects.Migrations
{
    [DbContext(typeof(Prn232HomeHelperFinderSystemContext))]
    [Migration("20250719133507_addIsEmailVerifiedForHelper")]
    partial class addIsEmailVerifiedForHelper
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BussinessObjects.Models.AdminUser", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("AdminId")
                        .HasName("PK__AdminUse__719FE4E8FCCE94E0");

                    b.HasIndex(new[] { "Username" }, "UQ__AdminUse__536C85E49000CC47")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__AdminUse__A9D10534D4CE2C9E")
                        .IsUnique();

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("BussinessObjects.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime?>("ActualEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BookingCreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CancellationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CancelledBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("EstimatedPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("FinalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("FreeCancellationDeadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("HelperId")
                        .HasColumnType("int")
                        .HasColumnName("HelperID");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<DateTime>("ScheduledEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduledStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__73951ACD92FB321F");

                    b.HasIndex("HelperId");

                    b.HasIndex("RequestId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BussinessObjects.Models.Chat", b =>
                {
                    b.Property<long>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ChatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ChatId"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<bool?>("IsModerated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsReadByReceiver")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModeratorAdminId")
                        .HasColumnType("int")
                        .HasColumnName("ModeratorAdminID");

                    b.Property<DateTime?>("ReadTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceiverHelperId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverHelperID");

                    b.Property<int?>("ReceiverUserId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverUserID");

                    b.Property<int?>("SenderHelperId")
                        .HasColumnType("int")
                        .HasColumnName("SenderHelperID");

                    b.Property<int?>("SenderUserId")
                        .HasColumnType("int")
                        .HasColumnName("SenderUserID");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ChatId")
                        .HasName("PK__Chats__A9FBE6264EF27BF8");

                    b.HasIndex("BookingId");

                    b.HasIndex("ModeratorAdminId");

                    b.HasIndex("ReceiverHelperId");

                    b.HasIndex("ReceiverUserId");

                    b.HasIndex("SenderHelperId");

                    b.HasIndex("SenderUserId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("BussinessObjects.Models.Connection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ConnectedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DeviceInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DisconnectedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Connections__3214EC07");

                    b.HasIndex(new[] { "ConnectionId" }, "IX_Connections_ConnectionId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("BussinessObjects.Models.FavoriteHelper", b =>
                {
                    b.Property<int>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FavoriteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteId"));

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("HelperId")
                        .HasColumnType("int")
                        .HasColumnName("HelperID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("FavoriteId")
                        .HasName("PK__Favorite__CE74FAF57A24D5D8");

                    b.HasIndex("HelperId");

                    b.HasIndex(new[] { "UserId", "HelperId" }, "UQ__Favorite__BFAF9A112C485D33")
                        .IsUnique();

                    b.ToTable("FavoriteHelpers");
                });

            modelBuilder.Entity("BussinessObjects.Models.Helper", b =>
                {
                    b.Property<int>("HelperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HelperID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HelperId"));

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("ApprovedByAdminId")
                        .HasColumnType("int")
                        .HasColumnName("ApprovedByAdminID");

                    b.Property<int>("AvailableStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("AverageRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(3, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProfilePictureURL");

                    b.Property<DateTime?>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("TotalHoursWorked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.HasKey("HelperId")
                        .HasName("PK__Helpers__82756BCB49F9326D");

                    b.HasIndex("ApprovedByAdminId");

                    b.HasIndex(new[] { "PhoneNumber" }, "UQ__Helpers__85FB4E38545E5842")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Helpers__A9D10534181E5E54")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Helpers");
                });

            modelBuilder.Entity("BussinessObjects.Models.HelperDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DocumentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocumentUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DocumentURL");

                    b.Property<int>("HelperId")
                        .HasColumnType("int")
                        .HasColumnName("HelperID");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("VerifiedByAdminId")
                        .HasColumnType("int")
                        .HasColumnName("VerifiedByAdminID");

                    b.HasKey("DocumentId")
                        .HasName("PK__HelperDo__1ABEEF6F8527D9AD");

                    b.HasIndex("HelperId");

                    b.HasIndex("VerifiedByAdminId");

                    b.ToTable("HelperDocuments");
                });

            modelBuilder.Entity("BussinessObjects.Models.HelperSkill", b =>
                {
                    b.Property<int>("HelperSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HelperSkillID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HelperSkillId"));

                    b.Property<int>("HelperId")
                        .HasColumnType("int")
                        .HasColumnName("HelperID");

                    b.Property<bool?>("IsPrimarySkill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("HelperSkillId")
                        .HasName("PK__HelperSk__22780E111712BBDB");

                    b.HasIndex("ServiceId");

                    b.HasIndex(new[] { "HelperId", "ServiceId" }, "UQ__HelperSk__3E24D0C48AE971E9")
                        .IsUnique();

                    b.ToTable("HelperSkills");
                });

            modelBuilder.Entity("BussinessObjects.Models.HelperWallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WalletID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WalletId"));

                    b.Property<decimal?>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("CurrencyCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasDefaultValue("VND");

                    b.Property<int>("HelperId")
                        .HasColumnType("int")
                        .HasColumnName("HelperID");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("WalletId")
                        .HasName("PK__HelperWa__84D4F92ED51955AB");

                    b.HasIndex(new[] { "HelperId" }, "UQ__HelperWa__82756BCA17857ABC")
                        .IsUnique();

                    b.ToTable("HelperWallets");
                });

            modelBuilder.Entity("BussinessObjects.Models.HelperWorkArea", b =>
                {
                    b.Property<int>("WorkAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkAreaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkAreaId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("HelperId")
                        .HasColumnType("int")
                        .HasColumnName("HelperID");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(10, 7)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(10, 7)");

                    b.Property<decimal?>("RadiusKm")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("RadiusKM");

                    b.Property<string>("Ward")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("WorkAreaId")
                        .HasName("PK__HelperWo__70734D65BC1A1AA4");

                    b.HasIndex("HelperId");

                    b.ToTable("HelperWorkAreas");
                });

            modelBuilder.Entity("BussinessObjects.Models.Notification", b =>
                {
                    b.Property<long>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("NotificationId"));

                    b.Property<DateTime?>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RecipientHelperId")
                        .HasColumnType("int")
                        .HasColumnName("RecipientHelperID");

                    b.Property<int?>("RecipientUserId")
                        .HasColumnType("int")
                        .HasColumnName("RecipientUserID");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ReferenceID");

                    b.Property<DateTime?>("SentTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E323FD91180");

                    b.HasIndex("RecipientHelperId");

                    b.HasIndex("RecipientUserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("BussinessObjects.Models.OtpVerification", b =>
                {
                    b.Property<int>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OtpID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtpId"));

                    b.Property<int?>("AttemptCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ExpiryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("OtpCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("OtpId")
                        .HasName("PK__OtpVerif__3143C4831984F9C4");

                    b.ToTable("OtpVerifications");
                });

            modelBuilder.Entity("BussinessObjects.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentGatewayResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TransactionID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A58AEF5F5A4");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("BussinessObjects.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HelperId")
                        .HasColumnType("int")
                        .HasColumnName("HelperID");

                    b.Property<bool?>("IsEdited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__74BC79AECC26EA7F");

                    b.HasIndex("HelperId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "BookingId" }, "UQ__Reviews__73951ACC463E5DF0")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BussinessObjects.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<decimal?>("BasePrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IconURL");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("ParentServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ParentServiceID");

                    b.Property<string>("PriceUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ServiceId")
                        .HasName("PK__Services__C51BB0EAEB23CFC6");

                    b.HasIndex("ParentServiceId");

                    b.HasIndex(new[] { "ServiceName" }, "UQ__Services__A42B5F9910585C13")
                        .IsUnique();

                    b.ToTable("Services");
                });

            modelBuilder.Entity("BussinessObjects.Models.ServiceRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("AddressID");

                    b.Property<int?>("HelperId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(10, 7)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(10, 7)");

                    b.Property<DateTime?>("RequestCreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("RequestedDurationHours")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<DateTime>("RequestedStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<string>("SpecialNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("RequestId")
                        .HasName("PK__ServiceR__33A8519A5166DDB8");

                    b.HasIndex("AddressId");

                    b.HasIndex("HelperId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("ServiceRequests");
                });

            modelBuilder.Entity("BussinessObjects.Models.SupportTicket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TicketID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int?>("AssignedToAdminId")
                        .HasColumnType("int")
                        .HasColumnName("AssignedToAdminID");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<DateTime?>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Medium");

                    b.Property<int?>("ReporterHelperId")
                        .HasColumnType("int")
                        .HasColumnName("ReporterHelperID");

                    b.Property<int?>("ReporterUserId")
                        .HasColumnType("int")
                        .HasColumnName("ReporterUserID");

                    b.Property<string>("ResolutionNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Open");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TicketId")
                        .HasName("PK__SupportT__712CC62797206C08");

                    b.HasIndex("AssignedToAdminId");

                    b.HasIndex("BookingId");

                    b.HasIndex("ReporterHelperId");

                    b.HasIndex("ReporterUserId");

                    b.ToTable("SupportTickets");
                });

            modelBuilder.Entity("BussinessObjects.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("DefaultAddressId")
                        .HasColumnType("int")
                        .HasColumnName("DefaultAddressID");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ExternalAuthId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ExternalAuthID");

                    b.Property<string>("ExternalAuthProvider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProfilePictureURL");

                    b.Property<DateTime?>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACBD8A1165");

                    b.HasIndex("DefaultAddressId");

                    b.HasIndex(new[] { "PhoneNumber" }, "UQ__Users__85FB4E388DCB4BB0")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053446F14E7A")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BussinessObjects.Models.UserAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AddressID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(10, 7)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(10, 7)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("Ward")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AddressId")
                        .HasName("PK__UserAddr__091C2A1B6FC387F9");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("BussinessObjects.Models.WalletTransaction", b =>
                {
                    b.Property<long>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("TransactionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceTransactionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ReferenceTransactionID");

                    b.Property<DateTime?>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WalletId")
                        .HasColumnType("int")
                        .HasColumnName("WalletID");

                    b.Property<int?>("WithdrawalRequestId")
                        .HasColumnType("int")
                        .HasColumnName("WithdrawalRequestID");

                    b.HasKey("TransactionId")
                        .HasName("PK__WalletTr__55433A4B07816BD8");

                    b.HasIndex("BookingId");

                    b.HasIndex("WalletId");

                    b.HasIndex("WithdrawalRequestId");

                    b.ToTable("WalletTransactions");
                });

            modelBuilder.Entity("BussinessObjects.Models.WithdrawalRequest", b =>
                {
                    b.Property<int>("WithdrawalRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WithdrawalRequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WithdrawalRequestId"));

                    b.Property<string>("AccountDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BankTransactionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BankTransactionID");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HelperId")
                        .HasColumnType("int")
                        .HasColumnName("HelperID");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessedByAdminId")
                        .HasColumnType("int")
                        .HasColumnName("ProcessedByAdminID");

                    b.Property<DateTime?>("ProcessingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RequestMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("WalletId")
                        .HasColumnType("int")
                        .HasColumnName("WalletID");

                    b.HasKey("WithdrawalRequestId")
                        .HasName("PK__Withdraw__FD8AA1D2B1E8B480");

                    b.HasIndex("HelperId");

                    b.HasIndex("ProcessedByAdminId");

                    b.HasIndex("WalletId");

                    b.ToTable("WithdrawalRequests");
                });

            modelBuilder.Entity("BussinessObjects.Models.Booking", b =>
                {
                    b.HasOne("BussinessObjects.Models.Helper", "Helper")
                        .WithMany("Bookings")
                        .HasForeignKey("HelperId")
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__Helper__73BA3083");

                    b.HasOne("BussinessObjects.Models.ServiceRequest", "Request")
                        .WithMany("Bookings")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__Bookings__Reques__71D1E811");

                    b.HasOne("BussinessObjects.Models.Service", "Service")
                        .WithMany("Bookings")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObjects.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Helper");

                    b.Navigation("Request");

                    b.Navigation("Service");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObjects.Models.Chat", b =>
                {
                    b.HasOne("BussinessObjects.Models.Booking", "Booking")
                        .WithMany("Chats")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Chats__BookingID__14270015");

                    b.HasOne("BussinessObjects.Models.AdminUser", "ModeratorAdmin")
                        .WithMany("Chats")
                        .HasForeignKey("ModeratorAdminId")
                        .HasConstraintName("FK__Chats__Moderator__18EBB532");

                    b.HasOne("BussinessObjects.Models.Helper", "ReceiverHelper")
                        .WithMany("ChatReceiverHelpers")
                        .HasForeignKey("ReceiverHelperId")
                        .HasConstraintName("FK__Chats__ReceiverH__17F790F9");

                    b.HasOne("BussinessObjects.Models.User", "ReceiverUser")
                        .WithMany("ChatReceiverUsers")
                        .HasForeignKey("ReceiverUserId")
                        .HasConstraintName("FK__Chats__ReceiverU__17036CC0");

                    b.HasOne("BussinessObjects.Models.Helper", "SenderHelper")
                        .WithMany("ChatSenderHelpers")
                        .HasForeignKey("SenderHelperId")
                        .HasConstraintName("FK__Chats__SenderHel__160F4887");

                    b.HasOne("BussinessObjects.Models.User", "SenderUser")
                        .WithMany("ChatSenderUsers")
                        .HasForeignKey("SenderUserId")
                        .HasConstraintName("FK__Chats__SenderUse__151B244E");

                    b.Navigation("Booking");

                    b.Navigation("ModeratorAdmin");

                    b.Navigation("ReceiverHelper");

                    b.Navigation("ReceiverUser");

                    b.Navigation("SenderHelper");

                    b.Navigation("SenderUser");
                });

            modelBuilder.Entity("BussinessObjects.Models.FavoriteHelper", b =>
                {
                    b.HasOne("BussinessObjects.Models.Helper", "Helper")
                        .WithMany("FavoriteHelpers")
                        .HasForeignKey("HelperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__FavoriteH__Helpe__08B54D69");

                    b.HasOne("BussinessObjects.Models.User", "User")
                        .WithMany("FavoriteHelpers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__FavoriteH__UserI__07C12930");

                    b.Navigation("Helper");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObjects.Models.Helper", b =>
                {
                    b.HasOne("BussinessObjects.Models.AdminUser", "ApprovedByAdmin")
                        .WithMany("Helpers")
                        .HasForeignKey("ApprovedByAdminId")
                        .HasConstraintName("FK__Helpers__Approve__534D60F1");

                    b.Navigation("ApprovedByAdmin");
                });

            modelBuilder.Entity("BussinessObjects.Models.HelperDocument", b =>
                {
                    b.HasOne("BussinessObjects.Models.Helper", "Helper")
                        .WithMany("HelperDocuments")
                        .HasForeignKey("HelperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HelperDoc__Helpe__5812160E");

                    b.HasOne("BussinessObjects.Models.AdminUser", "VerifiedByAdmin")
                        .WithMany("HelperDocuments")
                        .HasForeignKey("VerifiedByAdminId")
                        .HasConstraintName("FK__HelperDoc__Verif__59063A47");

                    b.Navigation("Helper");

                    b.Navigation("VerifiedByAdmin");
                });

            modelBuilder.Entity("BussinessObjects.Models.HelperSkill", b =>
                {
                    b.HasOne("BussinessObjects.Models.Helper", "Helper")
                        .WithMany("HelperSkills")
                        .HasForeignKey("HelperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HelperSki__Helpe__6383C8BA");

                    b.HasOne("BussinessObjects.Models.Service", "Service")
                        .WithMany("HelperSkills")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HelperSki__Servi__6477ECF3");

                    b.Navigation("Helper");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("BussinessObjects.Models.HelperWallet", b =>
                {
                    b.HasOne("BussinessObjects.Models.Helper", "Helper")
                        .WithOne("HelperWallet")
                        .HasForeignKey("BussinessObjects.Models.HelperWallet", "HelperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HelperWal__Helpe__2B0A656D");

                    b.Navigation("Helper");
                });

            modelBuilder.Entity("BussinessObjects.Models.HelperWorkArea", b =>
                {
                    b.HasOne("BussinessObjects.Models.Helper", "Helper")
                        .WithMany("HelperWorkAreas")
                        .HasForeignKey("HelperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HelperWor__Helpe__6754599E");

                    b.Navigation("Helper");
                });

            modelBuilder.Entity("BussinessObjects.Models.Notification", b =>
                {
                    b.HasOne("BussinessObjects.Models.Helper", "RecipientHelper")
                        .WithMany("Notifications")
                        .HasForeignKey("RecipientHelperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Notificat__Recip__0E6E26BF");

                    b.HasOne("BussinessObjects.Models.User", "RecipientUser")
                        .WithMany("Notifications")
                        .HasForeignKey("RecipientUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Notificat__Recip__0D7A0286");

                    b.Navigation("RecipientHelper");

                    b.Navigation("RecipientUser");
                });

            modelBuilder.Entity("BussinessObjects.Models.Payment", b =>
                {
                    b.HasOne("BussinessObjects.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Bookin__797309D9");

                    b.HasOne("BussinessObjects.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__UserID__7A672E12");

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObjects.Models.Review", b =>
                {
                    b.HasOne("BussinessObjects.Models.Booking", "Booking")
                        .WithOne("Review")
                        .HasForeignKey("BussinessObjects.Models.Review", "BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__Booking__01142BA1");

                    b.HasOne("BussinessObjects.Models.Helper", "Helper")
                        .WithMany("Reviews")
                        .HasForeignKey("HelperId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__HelperI__02FC7413");

                    b.HasOne("BussinessObjects.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__UserID__02084FDA");

                    b.Navigation("Booking");

                    b.Navigation("Helper");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObjects.Models.Service", b =>
                {
                    b.HasOne("BussinessObjects.Models.Service", "ParentService")
                        .WithMany("InverseParentService")
                        .HasForeignKey("ParentServiceId")
                        .HasConstraintName("FK__Services__Parent__5EBF139D");

                    b.Navigation("ParentService");
                });

            modelBuilder.Entity("BussinessObjects.Models.ServiceRequest", b =>
                {
                    b.HasOne("BussinessObjects.Models.UserAddress", "Address")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("FK__ServiceRe__Addre__6E01572D");

                    b.HasOne("BussinessObjects.Models.Helper", "Helper")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("HelperId");

                    b.HasOne("BussinessObjects.Models.Service", "Service")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK__ServiceRe__Servi__6D0D32F4");

                    b.HasOne("BussinessObjects.Models.User", "User")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ServiceRe__UserI__6C190EBB");

                    b.Navigation("Address");

                    b.Navigation("Helper");

                    b.Navigation("Service");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObjects.Models.SupportTicket", b =>
                {
                    b.HasOne("BussinessObjects.Models.AdminUser", "AssignedToAdmin")
                        .WithMany("SupportTickets")
                        .HasForeignKey("AssignedToAdminId")
                        .HasConstraintName("FK__SupportTi__Assig__236943A5");

                    b.HasOne("BussinessObjects.Models.Booking", "Booking")
                        .WithMany("SupportTickets")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__SupportTi__Booki__22751F6C");

                    b.HasOne("BussinessObjects.Models.Helper", "ReporterHelper")
                        .WithMany("SupportTickets")
                        .HasForeignKey("ReporterHelperId")
                        .HasConstraintName("FK__SupportTi__Repor__2180FB33");

                    b.HasOne("BussinessObjects.Models.User", "ReporterUser")
                        .WithMany("SupportTickets")
                        .HasForeignKey("ReporterUserId")
                        .HasConstraintName("FK__SupportTi__Repor__208CD6FA");

                    b.Navigation("AssignedToAdmin");

                    b.Navigation("Booking");

                    b.Navigation("ReporterHelper");

                    b.Navigation("ReporterUser");
                });

            modelBuilder.Entity("BussinessObjects.Models.User", b =>
                {
                    b.HasOne("BussinessObjects.Models.UserAddress", "DefaultAddress")
                        .WithMany("Users")
                        .HasForeignKey("DefaultAddressId")
                        .HasConstraintName("FK_Users_DefaultAddress");

                    b.Navigation("DefaultAddress");
                });

            modelBuilder.Entity("BussinessObjects.Models.UserAddress", b =>
                {
                    b.HasOne("BussinessObjects.Models.User", "User")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserAddre__UserI__4316F928");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BussinessObjects.Models.WalletTransaction", b =>
                {
                    b.HasOne("BussinessObjects.Models.Booking", "Booking")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__WalletTra__Booki__2FCF1A8A");

                    b.HasOne("BussinessObjects.Models.HelperWallet", "Wallet")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("WalletId")
                        .IsRequired()
                        .HasConstraintName("FK__WalletTra__Walle__2EDAF651");

                    b.HasOne("BussinessObjects.Models.WithdrawalRequest", "WithdrawalRequest")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("WithdrawalRequestId")
                        .HasConstraintName("FK_WalletTransactions_WithdrawalRequest");

                    b.Navigation("Booking");

                    b.Navigation("Wallet");

                    b.Navigation("WithdrawalRequest");
                });

            modelBuilder.Entity("BussinessObjects.Models.WithdrawalRequest", b =>
                {
                    b.HasOne("BussinessObjects.Models.Helper", "Helper")
                        .WithMany("WithdrawalRequests")
                        .HasForeignKey("HelperId")
                        .IsRequired()
                        .HasConstraintName("FK__Withdrawa__Helpe__3587F3E0");

                    b.HasOne("BussinessObjects.Models.AdminUser", "ProcessedByAdmin")
                        .WithMany("WithdrawalRequests")
                        .HasForeignKey("ProcessedByAdminId")
                        .HasConstraintName("FK__Withdrawa__Proce__37703C52");

                    b.HasOne("BussinessObjects.Models.HelperWallet", "Wallet")
                        .WithMany("WithdrawalRequests")
                        .HasForeignKey("WalletId")
                        .IsRequired()
                        .HasConstraintName("FK__Withdrawa__Walle__367C1819");

                    b.Navigation("Helper");

                    b.Navigation("ProcessedByAdmin");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObjects.Models.AdminUser", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("HelperDocuments");

                    b.Navigation("Helpers");

                    b.Navigation("SupportTickets");

                    b.Navigation("WithdrawalRequests");
                });

            modelBuilder.Entity("BussinessObjects.Models.Booking", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("Payments");

                    b.Navigation("Review");

                    b.Navigation("SupportTickets");

                    b.Navigation("WalletTransactions");
                });

            modelBuilder.Entity("BussinessObjects.Models.Helper", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("ChatReceiverHelpers");

                    b.Navigation("ChatSenderHelpers");

                    b.Navigation("FavoriteHelpers");

                    b.Navigation("HelperDocuments");

                    b.Navigation("HelperSkills");

                    b.Navigation("HelperWallet");

                    b.Navigation("HelperWorkAreas");

                    b.Navigation("Notifications");

                    b.Navigation("Reviews");

                    b.Navigation("ServiceRequests");

                    b.Navigation("SupportTickets");

                    b.Navigation("WithdrawalRequests");
                });

            modelBuilder.Entity("BussinessObjects.Models.HelperWallet", b =>
                {
                    b.Navigation("WalletTransactions");

                    b.Navigation("WithdrawalRequests");
                });

            modelBuilder.Entity("BussinessObjects.Models.Service", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("HelperSkills");

                    b.Navigation("InverseParentService");

                    b.Navigation("ServiceRequests");
                });

            modelBuilder.Entity("BussinessObjects.Models.ServiceRequest", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("BussinessObjects.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("ChatReceiverUsers");

                    b.Navigation("ChatSenderUsers");

                    b.Navigation("FavoriteHelpers");

                    b.Navigation("Notifications");

                    b.Navigation("Payments");

                    b.Navigation("Reviews");

                    b.Navigation("ServiceRequests");

                    b.Navigation("SupportTickets");

                    b.Navigation("UserAddresses");
                });

            modelBuilder.Entity("BussinessObjects.Models.UserAddress", b =>
                {
                    b.Navigation("ServiceRequests");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BussinessObjects.Models.WithdrawalRequest", b =>
                {
                    b.Navigation("WalletTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
